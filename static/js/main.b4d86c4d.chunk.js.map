{"version":3,"sources":["components/GameContent.js","components/Score.js","components/Game.js","App.js","index.js"],"names":["GameContent","props","buttonSelected","selectedAnswer","ev","setState","isAnswered","state","answers","question","answerPrefix","buttonClass","prevProps","this","answerAll","className","map","value","index","key","onClick","disabled","React","Component","Score","reversed","Game","gameStart","fetch","then","res","json","result","corrAnswer","results","correct_answer","incorrAnswer","incorrect_answers","answersAll","error","gameStarted","type","placeholder","id","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAEqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAkBRC,eAAiB,SAAAC,GAAc,OAAI,SAAAC,GACjC,EAAKC,SAAS,CACVF,eAAeA,EACfG,YAAW,MApBf,EAAKC,MAAQ,CACTD,YAAW,EACXH,eAAe,GACfK,QAAQ,CAAC,IAAI,IAAI,IAAI,KACrBC,SAAS,sDACTC,aAAa,CAAC,IAAI,IAAI,IAAI,KAC1BC,YAAa,IARA,E,+DAWAC,GACbA,EAAUJ,UAAYK,KAAKZ,MAAMO,SACnCK,KAAKR,SAAS,CACVG,QAAQK,KAAKZ,MAAMO,QACnBC,SAASI,KAAKZ,MAAMQ,a,+BAYlB,IAAD,OACCK,EAAYD,KAAKN,MAAMC,QACvBE,EAAeG,KAAKN,MAAMG,aAC1B,OACA,yBAAKK,UAAU,QACX,yBAAKA,UAAU,qDACX,uBAAGA,UAAU,oBAAb,WAGA,uBAAGA,UAAU,qBACRF,KAAKN,MAAME,WAGpB,yBAAKM,UAAU,iCACdD,EAAUE,KAAI,SAACC,EAAOC,GACnB,OAAO,4BACPC,IAAKD,EACLE,QAAS,EAAKlB,eAAegB,GAC7BH,UAAS,yBAAoB,EAAKR,MAAMD,WAAa,GAAK,gBAAjD,YAAqEY,IAAU,EAAKX,MAAMJ,eAAiB,UAAY,IAChIkB,WAAU,EAAKd,MAAMD,YACrB,0BAAMS,UAAU,kBAAkBL,EAAaQ,IAAeD,OAIlE,yBAAKF,UAAU,mCACX,4BAAQA,UAAU,oCAAlB,cACA,4BAAQA,UAAU,oCAAlB,SACA,4BAAQA,UAAU,oCAAlB,wB,GAvDqBO,IAAMC,WCC1BC,E,kDACnB,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IACDM,MAAQ,CACXC,QAAS,CAAC,IAAK,IAAK,IAAK,MAHV,E,qDAQT,OACA,yBAAKO,UAAU,wCACX,mDACA,wBAAIU,UAAQ,GACR,wBAAIV,UAAU,aAAd,WACA,sCACA,sCACA,sCACA,qCACA,wBAAIA,UAAU,aAAd,SACA,qCACA,qCACA,oCACA,oCACA,wBAAIA,UAAU,aAAd,QACA,yC,GAxBeO,IAAMC,WCEpBG,E,kDACnB,WAAYzB,GAAQ,IAAD,8BACjB,cAAMA,IASR0B,UAAY,WACVC,MAAM,sCACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,IAAIC,EAAaD,EAAOE,QAAQ,GAAGC,eAC/BC,EAAeJ,EAAOE,QAAQ,GAAGG,kBACjCC,EAAU,sBAAOL,GAAP,YAAsBG,IACpC,EAAK/B,SAAS,CACZG,QAAS8B,EACT7B,SAASuB,EAAOE,QAAQ,GAAGzB,cAG/B,SAAC8B,GACC,EAAKlC,SAAS,CACZkC,aAIN,EAAKlC,SAAS,CACZmC,aAAY,KA5Bd,EAAKjC,MAAQ,CACXE,SAAS,GACTD,QAAQ,GACRgC,aAAY,GALG,E,qDAoCT,OAAO,yBAAKzB,UAAU,WAC1B,yBAAKA,UAAU,aACf,yBAAKA,UAAU,kBACP,2BAAOA,UAAU,cAAc0B,KAAK,OAAOC,YAAY,kBACvD,4BAAQtB,QAASP,KAAKc,UAAWgB,GAAG,YAAY5B,UAAU,oCAA1D,uBACA,4BAAQA,UAAU,oCAAlB,0BAEJ,kBAAC,EAAD,CAAaP,QAASK,KAAKN,MAAMC,QAASC,SAAUI,KAAKN,MAAME,WAC/D,kBAAC,EAAD,Y,GA7CsBa,IAAMC,WCIzBqB,MANf,WACE,OACE,kBAAC,EAAD,OCAJC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.b4d86c4d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class GameContent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        isAnswered:false,\r\n        selectedAnswer:'',\r\n        answers:['A','B','C','D'],\r\n        question:\"Witaj rozpocznij grę by wylosować pytanie\",\r\n        answerPrefix:['A','B','C','D'],\r\n        buttonClass: \"\",\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.answers !== this.props.answers) {\r\n      this.setState({\r\n          answers:this.props.answers,\r\n          question:this.props.question\r\n      });\r\n    }\r\n  }\r\n  buttonSelected = selectedAnswer => ev => {\r\n    this.setState({ \r\n        selectedAnswer:selectedAnswer,\r\n        isAnswered:true\r\n    })\r\n}\r\n\r\n\r\n  render() {\r\n      const answerAll = this.state.answers;\r\n      const answerPrefix = this.state.answerPrefix;\r\n            return(\r\n            <div className=\"game\">\r\n                <div className=\"question--wrapper bg__dark p-05 font__light-thick\">\r\n                    <p className=\"question--header\">\r\n                        Pytanie\r\n                    </p>\r\n                    <p className=\"question--content\">\r\n                        {this.state.question}\r\n                    </p>\r\n                </div>\r\n                <div className=\"answer--wrapper bg__dark p-05\">\r\n                {answerAll.map((value, index) => {\r\n                    return <button \r\n                    key={index} \r\n                    onClick={this.buttonSelected(index)} \r\n                    className={`answer--button ${this.state.isAnswered ? '' : 'answer--hover'} ${ index === this.state.selectedAnswer ? 'checked' : ''}`}\r\n                    disabled={this.state.isAnswered ? true : false}>\r\n                    <span className=\"answer__prefix\">{answerPrefix[index]}</span>{value}</button>\r\n                })}\r\n                </div>\r\n                \r\n                <div className=\"lifebuoy--wrapper bg__dark p-05\">\r\n                    <button className=\"lifebuoy--item font__light-thick\">Extra time</button>\r\n                    <button className=\"lifebuoy--item font__light-thick\">50/50</button>\r\n                    <button className=\"lifebuoy--item font__light-thick\">Audience chart</button>\r\n                </div>\r\n            </div>\r\n            );\r\n        };\r\n    }","\r\nimport React from 'react';\r\n\r\nexport default class Score extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      answers: ['A', 'B', 'C', 'D']\r\n    }\r\n  }\r\n\r\n  render() {\r\n            return(\r\n            <div className=\"score bg__dark p-1 font__light-thick\" >\r\n                <h1>Postępy w grze</h1>\r\n                <ol reversed>\r\n                    <li className=\"milestone\">1000000</li>\r\n                    <li>500000</li>\r\n                    <li>250000</li>\r\n                    <li>125000</li>\r\n                    <li>75000</li>\r\n                    <li className=\"milestone\">40000</li>\r\n                    <li>20000</li>\r\n                    <li>10000</li>\r\n                    <li>5000</li>\r\n                    <li>2000</li>\r\n                    <li className=\"milestone\">1000</li>\r\n                    <li>500</li>\r\n                </ol>\r\n            </div>\r\n            );\r\n        };\r\n    }","\r\nimport React from 'react';\r\nimport GameContent from './GameContent.js';\r\nimport Score from './Score.js';\r\n\r\nexport default class Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      question:\"\",\r\n      answers:[],\r\n      gameStarted:false\r\n    }\r\n  }\r\n\r\n\r\n  gameStart = () => {\r\n    fetch(\"https://api.myjson.com/bins/1agxok\")\r\n    .then(res => res.json())\r\n    .then(\r\n      (result) => {\r\n        let corrAnswer = result.results[0].correct_answer;\r\n        let incorrAnswer = result.results[0].incorrect_answers;\r\n        let answersAll = [...corrAnswer, ...incorrAnswer];\r\n        this.setState({\r\n          answers: answersAll,\r\n          question:result.results[0].question\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          error\r\n        });\r\n      }\r\n    )\r\n    this.setState({\r\n      gameStarted:true\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n            return <div className=\"wrapper\">\r\n        <div className=\"container\">\r\n        <div className=\"panel bg__dark\">\r\n                <input className=\"panel--item\" type=\"text\" placeholder=\"Enter name...\"></input>\r\n                <button onClick={this.gameStart} id=\"startGame\" className=\"panel--button button panel--item\">Rozpocznij grę</button>\r\n                <button className=\"panel--button button panel--item\">Następne pytanie</button>\r\n            </div>\r\n            <GameContent answers={this.state.answers} question={this.state.question}/>\r\n            <Score/>\r\n        </div>\r\n    </div>\r\n        };\r\n    }","import React from 'react';\nimport './styles.scss';\nimport Game from './components/Game.js';\nfunction App() {\n  return (\n    <Game/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}